Date Formats--JAVASCRIPT:

	- Đặc điểm chung là nếu input thiếu phần nào thì output sẽ thiết lập giá trị mặc định cho nó là giá trị nhỏ nhất có thể

	- JavaScript Date Input
	
		There are generally 3 types of JavaScript date input formats:
		
			ISO Date	"2015-03-25" (The International Standard)
			Short Date	"03/25/2015"
			Long Date	"Mar 25 2015" or "25 Mar 2015"
			
	- JavaScript Date Output
	
		Independent of input format, JavaScript will (by default) output dates in full text string format:
		
			Sat Jul 27 2024 08:16:41 GMT+0700 (Indochina Time)
			
	- ISO Dates (Date-Time)
	
		Date and time is separated with a capital T.
		UTC time is defined with a capital letter Z.
		If you want to modify the time relative to UTC, remove the Z and add +HH:MM or -HH:MM instead
		Omitting T or Z in a date-time string can give different results in different browsers.
	
		const d = new Date("2015-03-25T12:00:00Z"); // Wed Mar 25 2015 19:00:00 GMT+0700 (Indochina Time)
		
		document.getElementById("demo").innerHTML = new Date("2015-03-25T12:00:00-06:00"); // Thu Mar 26 2015 01:00:00 GMT+0700 (Indochina Time)
		
	- Time Zones
	
		When setting a date, without specifying the time zone, JavaScript will use the browser's time zone.

		When getting a date, without specifying the time zone, the result is converted to the browser's time zone.

		In other words: If a date/time is created in GMT (Greenwich Mean Time), the date/time will be converted to CDT (Central US Daylight Time) if a user browses from central US.
		
	- JavaScript Short Dates.
	
		Short dates are written with an "MM/DD/YYYY" syntax like this:
		
			const d = new Date("03/25/2015"); // Wed Mar 25 2015 00:00:00 GMT+0700 (Indochina Time)
			
	- JavaScript Long Dates.
	
		Long dates are most often written with a "MMM DD YYYY" syntax like this:
		
			const d = new Date("Mar 25 2015"); // Wed Mar 25 2015 00:00:00 GMT+0700 (Indochina Time)
			
		Month and day can be in any order:
		
			const d = new Date("25 Mar 2015"); // Wed Mar 25 2015 00:00:00 GMT+0700 (Indochina Time)
			
		Month can be written in full (January), or abbreviated (Jan):
		
			const d = new Date("January 25 2015"); // Sun Jan 25 2015 00:00:00 GMT+0700 (Indochina Time)
			const d = new Date("Jan 25 2015"); // Sun Jan 25 2015 00:00:00 GMT+0700 (Indochina Time)
			
		Commas are ignored. Names are case insensitive:
		
			const d = new Date("JANUARY, 25, 2015"); // Sun Jan 25 2015 00:00:00 GMT+0700 (Indochina Time)
			
	- WARNINGS !
	
		In some browsers, months or days with no leading zeroes may produce an error:
		
			const d = new Date("2015-3-25");
			
		The behavior of "YYYY/MM/DD" is undefined. Some browsers will try to guess the format. Some will return NaN.
		
			const d = new Date("2015/03/25");
			
		The behavior of  "DD-MM-YYYY" is also undefined. Some browsers will try to guess the format. Some will return NaN.
		
			const d = new Date("25-03-2015");
			
	- Date Input - Parsing Dates
	
		If you have a valid date string, you can use the Date.parse() method to convert it to milliseconds.

		Date.parse() returns the number of milliseconds between the date and January 1, 1970:
		
			const msec = Date.parse("March 21, 2012"); // 1332262800000
			
		You can then use the number of milliseconds to convert it to a date object:
		
			let msec = Date.parse("March 21, 2012");
			const d = new Date(msec); // Wed Mar 21 2012 00:00:00 GMT+0700 (Indochina Time)