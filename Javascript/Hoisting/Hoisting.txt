Hoisting--Các kiến thức nền tảng JAVASCRIPT:

									Hoisting is JavaScript's default behavior of moving declarations to the top.
									
	Sự khác nhau chính giữa hoisting của var so với let và const:
	
		var:
									Khi sử dụng từ khóa var, biến được khởi tạo với giá trị mặc định là undefined trong quá trình hoisting. Điều này có nghĩa là, dù biến được khai báo ở bất kỳ đâu trong phạm vi hàm
									hoặc khối mã, nó sẽ tồn tại và có giá trị undefined từ đầu của phạm vi đó.
									
									console.log(myVar); // undefined
									var myVar = 10;
									console.log(myVar); // 10

		let và const:
									Khi sử dụng từ khóa let hoặc const, biến không được khởi tạo với giá trị mặc định trong quá trình hoisting. Thay vào đó, biến sẽ tồn tại trong phạm vi khối mã, nhưng không có giá trị
									khởi tạo. Điều này có nghĩa là ta không thể truy cập vào biến trước khi nó được khai báo.
									
									console.log(myVar); // ReferenceError: myVar is not defined
									let myVar = 20;
									console.log(myVar); // 20
									
	JavaScript Initializations are Not Hoisted:
	
									JavaScript only hoists declarations, not initializations.

									<!DOCTYPE html>
									<html>
									<body>
									<p id="demo"></p>
									<script>
									var x = 5; // Initialize x
									var y = 7; // Initialize y
									elem = document.getElementById("demo"); // Find an element 
									elem.innerHTML = x + " " + y;       // Display x and y. 5 7
									</script>
									</body>
									</html>
									
									<!DOCTYPE html>
									<html>
									<body>
									<p id="demo"></p>
									<script>
									var x = 5;  // Initialize x
									elem = document.getElementById("demo");      // Find an element 
									elem.innerHTML = "x is " + x + " and y is " + y;  // Display x and y. x is 5 and y is undefined
									var y = 7;  // Initialize y
									</script>
									</body>
									</html>
									
	Declare Your Variables At the Top:
	
									Hoisting is (to many developers) an unknown or overlooked behavior of JavaScript.
									If a developer doesn't understand hoisting, programs may contain bugs (errors).
									To avoid bugs, always declare all variables at the beginning of every scope.
									Since this is how JavaScript interprets the code, it is always a good rule.