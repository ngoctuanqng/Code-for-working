Timing Events--Các kiến thức nền tảng JAVASCRIPT:

									The window object allows execution of code at specified time intervals. These time intervals are called timing events.
									The setTimeout() and setInterval() are both methods of the HTML DOM Window object.
	
	The setTimeout() Method:
	
									Executes a function, after waiting a specified number of milliseconds.
									
									window.setTimeout(function, milliseconds);
									
									<!DOCTYPE html>
									<html>
									<body>
									<h2>JavaScript Timing</h2>
									<p>Click "Try it". Wait 3 seconds, and the page will alert "Hello".</p>
									<button onclick="setTimeout(myFunction, 3000);">Try it</button>
									<script>
									function myFunction() {
									  alert('Hello');
									}
									</script>
									</body>
									</html>
									
	The clearTimeout() method:

									The clearTimeout() method stops the execution of the function specified in setTimeout().
									The clearTimeout() method uses the variable returned from setTimeout()
									If the function has not already been executed, you can stop the execution by calling the clearTimeout() method
									
									window.clearTimeout(timeoutVariable)
									
									myVar = setTimeout(function, milliseconds);
									clearTimeout(myVar);
									
									<!DOCTYPE html>
									<html>
									<body>
									<h2>JavaScript Timing</h2>
									<p>Click "Try it". Wait 3 seconds. The page will alert "Hello".</p>
									<p>Click "Stop" to prevent the first function to execute.</p>
									<p>(You must click "Stop" before the 3 seconds are up.)</p>
									<button onclick="myVar = setTimeout(myFunction, 3000)">Try it</button>
									<button onclick="clearTimeout(myVar)">Stop it</button>
									<script>
									function myFunction() {
									  alert("Hello");
									}
									</script>
									</body>
									</html>
									
	The setInterval() Method:
	
									The setInterval() method repeats a given function at every given time-interval.
									
									window.setInterval(function, milliseconds);
									
									<!DOCTYPE html>
									<html>
									<body>
									<h2>JavaScript Timing</h2>
									<p>A script on this page starts this clock:</p>
									<p id="demo"></p>
									<script>
									setInterval(myTimer, 1000);
									function myTimer() {
									  const d = new Date();
									  document.getElementById("demo").innerHTML = d.toLocaleTimeString();
									}
									</script>
									</body>
									</html>
									
	The clearInterval() method:
	
									The clearInterval() method stops the executions of the function specified in the setInterval() method.
									The clearInterval() method uses the variable returned from setInterval():
									
									window.clearInterval(timerVariable)
									
									let myVar = setInterval(function, milliseconds);
									clearInterval(myVar);
									
									<!DOCTYPE html>
									<html>
									<body>
									<h2>JavaScript Timing</h2>
									<p>A script on this page starts this clock:</p>
									<p id="demo"></p>
									<button onclick="clearInterval(myVar)">Stop time</button>
									<script>
									let myVar = setInterval(myTimer ,1000);
									function myTimer() {
									  const d = new Date();
									  document.getElementById("demo").innerHTML = d.toLocaleTimeString();
									}
									</script>
									</body>
									</html>