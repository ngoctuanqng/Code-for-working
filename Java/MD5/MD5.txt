MD5--JAVA:
	MD5 Using Apache Commons:							@Test
														public void givenPassword_whenHashingUsingCommons_thenVerifying()  {
															String hash = "35454B055CC325EA1AF2126E27707052";
															String password = "ILoveJava";

															String md5Hex = DigestUtils.md5Hex(password).toUpperCase();
																
															assertThat(md5Hex.equals(hash)).isTrue();
														}
	MD5 Using MessageDigest Class:						@Test
														public void givenPassword_whenHashing_thenVerifying() 
														  throws NoSuchAlgorithmException {
															String hash = "35454B055CC325EA1AF2126E27707052";
															String password = "ILoveJava";
																
															MessageDigest md = MessageDigest.getInstance("MD5");
															md.update(password.getBytes());
															byte[] digest = md.digest();
															String myHash = DatatypeConverter
															  .printHexBinary(digest).toUpperCase();
																
															assertThat(myHash.equals(hash)).isTrue();
														}
	MD5 Using Guava:									@Test
														public void givenFile_whenChecksumUsingGuava_thenVerifying() 
														  throws IOException {
															String filename = "src/test/resources/test_md5.txt";
															String checksum = "5EB63BBBE01EEED093CB22BB8F5ACDC3";
																
															HashCode hash = com.google.common.io.Files
															  .hash(new File(filename), Hashing.md5());
															String myChecksum = hash.toString()
															  .toUpperCase();
																
															assertThat(myChecksum.equals(checksum)).isTrue();
														}	