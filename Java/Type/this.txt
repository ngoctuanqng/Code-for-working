this--JAVA:
	Tham chiếu tới biến instance của lớp hiện tại:
		Khi không có this:
																public class Student10 {
																	int id;
																	String name;																		 
																	Student10(int id, String name) {
																		id = id;
																		name = name;
																	}																		 
																	void display() {
																		System.out.println(id + " " + name);
																	}																		 
																	public static void main(String args[]) {
																		Student10 s1 = new Student10(111, "Viet");
																		Student10 s2 = new Student10(222, "Nam");
																		s1.display(); // 0 null 
																		s2.display(); // 0 null 
																	}
																}															
		Khi có this:														
																public class Student11 {
																	int id;
																	String name;																		 
																	Student11(int id, String name) {
																		this.id = id;
																		this.name = name;
																	}																		 
																	void display() {
																		System.out.println(id + " " + name);
																	}																		 
																	public static void main(String args[]) {
																		Student11 s1 = new Student11(111, "Viet");
																		Student11 s2 = new Student11(222, "Nam");
																		s1.display(); // 111 Viet
																		s2.display(); // 222 Nam
																	}
																}
		Nếu biến cục bộ và biến toàn cục có tên khác nhau thì không cần sử dụng từ khóa this:				
																										public class Student12 {
																											int id;
																											String name;																												 
																											Student12(int i, String n) {
																												id = i;
																												name = n;
																											}																												 
																											void display() {
																												System.out.println(id + " " + name);
																											}																												 
																											public static void main(String args[]) {
																												Student12 e1 = new Student12(111, "Viet");
																												Student12 e2 = new Student12(222, "Nam");
																												e1.display(); // 111 Viet
																												e2.display(); // 222 Name
																											}
																										}
	Sử dụng this() gọi Constructor của lớp hiện tại:
																public class Student14 {
																	int id;
																	String name;
																	String city;																	 
																	Student14(int id, String name) {
																		this.id = id;
																		this.name = name;
																	}																	 
																	Student14(int id, String name, String city) {
																		this(id, name); // now no need to initialize id and name. Sẽ gọi constructor 2 tham số phía trên ở đây
																						// Quy tắc: this() phải được khai báo dòng lệnh đầu tiên trong Constructor.
																		this.city = city;
																	}																	 
																	void display() {
																		System.out.println(id + " " + name + " " + city);
																	}																	 
																	public static void main(String args[]) {
																		Student14 e1 = new Student14(111, "Viet");
																		Student14 e2 = new Student14(222, "Nam", "Ha Noi");
																		e1.display(); // 111 Viet null
																		e2.display(); // 222 Nam Ha Noi
																	}
																}
	Gọi phương thức của lớp hiện tại:
																public class Example3 {
																	void m() {
																		System.out.println("Gọi phương thức bằng từ khóa this");
																	}																	 
																	void n() {
																		this.m();
																	}																	 
																	void p() {
																		n();// trình biên dịch sẽ thêm this để gọi phương thức n() như this.n()
																	}																	 
																	public static void main(String args[]) {
																		Example3 o1 = new Example3();
																		o1.p();
																	}
																}
	Sử dụng từ khóa this như một tham số của phương thức:
																public class Example4 {
																	void m(Example4 obj) {
																		System.out.println("Hello Java");
																	}																	 
																	void p() {
																		m(this); // Từ khóa this được sử dụng như một tham số trong việc xử lý sự kiện
																				 // hoặc trong trường hơp mà chúng ta phải cung cấp tham chiếu của một lớp cho một lớp khác.
																	}																	 
																	public static void main(String args[]) {
																		Example4 o1 = new Example4();
																		o1.p(); // Hello Java
																	}
																}
	Sử dụng từ khóa this như một tham số của Constructor:
																class B {  
																  A4 obj;  
																  B(A4 obj) {  
																	this.obj=obj; 
																  }  
																  void display() {  
																	System.out.println(obj.data);// sử dụng biến thành viên cửa lớp A4
																  }  
																}  
																   
																class A4 {  
																  int data=10;  
																  A4(){  
																   B b = new B(this); // Bạn cũng có thể truyền từ khóa this trong Constructor.
																				      // Tính năng này rất hữu ích nếu chúng ta phải sử dụng một đối tượng trong nhiều lớp.
																   b.display();  
																  }  
																  public static void main(String args[]) {  
																   A4 a = new A4(); // 10
																  }  
																}
	Sử dụng từ khóa this để trả về instance của lớp hiện tại:
																class A {  
																	A getA() {  
																		return this;  
																	}  
																	void msg() {
																		System.out.println("Hello Java");
																	}  
																}  																	   
																class Test1 {  
																	public static void main(String args[]) {  
																		new A().getA().msg(); // Hello java
																	}  
																}

																class A5 {
																	void m() {
																		System.out.println(this); //in ra cung tham chieu ID  
																	}																	 
																	public static void main(String args[]) {
																		A5 obj = new A5();
																		System.out.println(obj); //in tham chieu ID. A5@22b3ea59																	 
																		obj.m(); // A5@22b3ea59
																	}
																}